#!/usr/bin/env bds
#vim: syntax=java

include "species.bds"
include "align_multimapping.bds"
include "module_template.bds"


help == align bowtie2 settings (requirements: -bwt2_idx)
bwt2_idx	:= ""		help Bowtie2 index (full path prefix of *.1.bt2 file).
wt_bwt2		:= "47h"	help Walltime for bowtie2 (default: 47h, 47:00:00).
mem_bwt2	:= "12G"	help Max. memory for bowtie2 (default: 12G).


grp_color_bwt2		:= "salmon"


init_align_bwt2()


void init_align_bwt2() {

	bwt2_idx 	= get_conf_val( bwt2_idx, 	["bwt2_idx"] )
	wt_bwt2 	= get_conf_val( wt_bwt2, 	["wt_bwt2"] )
	mem_bwt2 	= get_conf_val( mem_bwt2,	["mem_bwt2"] )

	print("\n\n== align bowtie2 settings\n")
	print( "Bowtie2 index\t\t\t: $bwt2_idx\n" )
	print( "Walltime (bowtie2)\t\t: $wt_bwt2\n")
	print( "Max. memory (bowtie2)\t\t: $mem_bwt2\n")
}

void chk_align_bwt2() {

	if ( !path_exists("$bwt2_idx.1.bt2") && !path_exists("$bwt2_idx.1.bt2l") ) {
		error("Bowtie2 index (-bwt2_idx) doesn't exists! (file: $bwt2_idx.1.bt2 or $bwt2_idx.1.bt2l)\n")
	}
}

string[] bowtie2( string fastq, string o_dir, string log_o_dir, string group, int nth_bwt2, bool trimmed ) { 

	prefix 	:= replace_dir( rm_ext( fastq, ["fastq","fq"] ), o_dir )
	prefix2	:= replace_dir( prefix, log_o_dir )
	bam 	:= "$prefix.bam"
	log 	:= "$prefix2.align.log"
	param 	:= multimapping>0 ? "-k $multimapping" : ""

	in 	:= [ fastq ]
	out 	:= [ bam, log ]

	taskName:= "bowtie2 "+group
	cpus 	:= (nth_bwt2==1) ? -1 : nth_bwt2; mem := get_res_mem(mem_bwt2,nth_bwt2); 	timeout := get_res_wt(wt_bwt2)

	wait_par( cpus )

	tid := task( out<-in ) {

		sys $shcmd_init

		//sys bowtie2 $param -x $bwt2_idx --threads $nth_bwt2 -U <(zcat -f $fastq) 2> $log | \
		//	samtools view -Su /dev/stdin | sambamba sort -t 1 /dev/stdin -o $bam
		sys bowtie2 $param -x $bwt2_idx --threads $nth_bwt2 -U <(zcat -f $fastq) 2> $log | \
			samtools view -Su /dev/stdin | samtools sort - $prefix
		sys samtools index $bam

		sys $shcmd_finalize
	}

	register_par( tid, cpus )

	add_task_to_graph( in, out, group, "BOWTIE2", grp_color_bwt2 )

	return out
}

string[] bowtie2_csem( string fastq, string o_dir, string log_o_dir, string group, int nth_bwt2, bool trimmed ) {

	prefix 	:= replace_dir( rm_ext( fastq, ["fastq","fq"] ), o_dir )
	prefix2 := replace_dir( prefix, log_o_dir )
	sam 		:= "$prefix.sam"
	log 		:= "$prefix2.align.log"
	srt_bam		:= "$prefix.csem.sorted.bam"
	srt_bam_prefix 	:= "$prefix.csem"
	bam 		:= "$prefix.csem.bam"
	param 	:= multimapping ? "-k 4" : ""

	in 	:= [ fastq ]
	out 	:= [ bam, log ]

	taskName:= "bowtie2_csem "+group
	cpus 	:= (nth_bwt2==1) ? -1 : nth_bwt2; mem := get_res_mem(mem_bwt2,nth_bwt2); 	timeout := get_res_wt(wt_bwt2)

	wait_par( cpus )

	tid := task( out<-in ) {

		sys $shcmd_init

		sys bowtie2 $param -x $bwt2_idx --threads $nth_bwt2 -U <(zcat -f $fastq) 2> $log > $sam
		sys run-csem --sam -p $nth_bwt2 $sam 100 $srt_bam_prefix

		sys mv $srt_bam $bam

		sys sambamba index -t $nth_bwt2 $bam

		sys rm -f $sam

		sys $shcmd_finalize
	}

	register_par( tid, cpus )

	add_task_to_graph( in, out, group, "BOWTIE2\\nCSEM", grp_color_bwt2 )

	return out
}

// trimmed_fastq : fastqs are trimmed or not
string[] bowtie2_PE( string fastq1, string fastq2, string o_dir, string log_o_dir, string group, int nth_bwt2, bool trimmed ) { 

	prefix 	:= replace_dir( rm_ext( fastq1, ["fastq","fq"] ), o_dir ) + ".PE2SE"
	prefix2 := replace_dir( prefix, log_o_dir )
	bam 	:= "$prefix.bam"
	log 	:= "$prefix2.align.log"
	param 	:= multimapping ? "-k 4" : ""

	in 	:= [ fastq1, fastq2 ]
	out 	:= [ bam, log ]

	taskName:= "bowtie2_PE "+group
	cpus 	:= (nth_bwt2==1) ? -1 : nth_bwt2; mem := get_res_mem(mem_bwt2,nth_bwt2); 	timeout := get_res_wt(wt_bwt2)

	wait_par( cpus )

	tid := task( out<-in ) {

		sys $shcmd_init

		//sys bowtie2 $param -X2000 --mm --threads $nth_bwt2 -x $bwt2_idx \
		//	-1 $fastq1 -2 $fastq2 2>$log | \
		//	samtools view -Su /dev/stdin | sambamba sort -t 1 /dev/stdin -o $bam
		sys bowtie2 $param -X2000 --mm --local --threads $nth_bwt2 -x $bwt2_idx \
			-1 $fastq1 -2 $fastq2 2>$log | \
			samtools view -Su /dev/stdin | samtools sort - $prefix
		sys samtools index $bam

		sys $shcmd_finalize
	}

	register_par( tid, cpus )

	add_task_to_graph( in, out, group, "BOWTIE2", grp_color_bwt2 )

	return out
}
